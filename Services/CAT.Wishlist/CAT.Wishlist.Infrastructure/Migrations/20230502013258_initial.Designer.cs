// <auto-generated />
using System;
using CAT.Wishlist.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CAT.Wishlist.Infrastructure.Migrations
{
    [DbContext(typeof(WishlistDbContext))]
    [Migration("20230502013258_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CAT.Wishlist.Domain.WishlistAggregate.Wishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Wishlists", "listing");
                });

            modelBuilder.Entity("CAT.Wishlist.Domain.WishlistAggregate.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WishlistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WishlistId");

                    b.ToTable("WishlistItems", "listing");
                });

            modelBuilder.Entity("CAT.Wishlist.Domain.WishlistAggregate.Wishlist", b =>
                {
                    b.OwnsOne("CAT.Wishlist.Domain.WishlistAggregate.Label", "Label", b1 =>
                        {
                            b1.Property<int>("WishlistId")
                                .HasColumnType("int");

                            b1.Property<int>("Amount")
                                .HasColumnType("int");

                            b1.Property<string>("Color")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Text")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("WishlistId");

                            b1.ToTable("Wishlists", "listing");

                            b1.WithOwner()
                                .HasForeignKey("WishlistId");
                        });

                    b.Navigation("Label")
                        .IsRequired();
                });

            modelBuilder.Entity("CAT.Wishlist.Domain.WishlistAggregate.WishlistItem", b =>
                {
                    b.HasOne("CAT.Wishlist.Domain.WishlistAggregate.Wishlist", null)
                        .WithMany("WishlistItems")
                        .HasForeignKey("WishlistId");
                });

            modelBuilder.Entity("CAT.Wishlist.Domain.WishlistAggregate.Wishlist", b =>
                {
                    b.Navigation("WishlistItems");
                });
#pragma warning restore 612, 618
        }
    }
}
